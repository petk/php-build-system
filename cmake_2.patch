diff --git a/cmake/CMakeLists.txt b/cmake/CMakeLists.txt
index 75ff5a0..77b9469 100644
--- a/cmake/CMakeLists.txt
+++ b/cmake/CMakeLists.txt
@@ -42,6 +42,9 @@ target_include_directories(
 #   cmake --build <dir> -t php_generate_files
 add_custom_target(php_generate_files)
 
+add_library(php_libraries INTERFACE)
+add_library(PHP::libraries ALIAS php_libraries)
+
 # Configure build types.
 include(cmake/BuildTypes.cmake)
 
@@ -100,6 +103,14 @@ add_subdirectory(win32)
 add_subdirectory(main)
 add_subdirectory(scripts)
 
+target_link_libraries(
+  php_libraries
+  INTERFACE
+    #Zend::Zend
+    $<LIST:FILTER,$<TARGET_OBJECTS:Zend::Zend>,EXCLUDE,zend_alloc.c.o>
+    $<TARGET_OBJECTS:Zend::Zend>
+)
+
 # Execute all deferred calls.
 block()
   cmake_language(DEFER GET_CALL_IDS ids)
diff --git a/cmake/TSRM/CMakeLists.txt b/cmake/TSRM/CMakeLists.txt
index 0f94593..55475a5 100644
--- a/cmake/TSRM/CMakeLists.txt
+++ b/cmake/TSRM/CMakeLists.txt
@@ -1,6 +1,6 @@
 include(FeatureSummary)
 
-add_library(php_tsrm STATIC)
+add_library(php_tsrm OBJECT)
 add_library(PHP::TSRM ALIAS php_tsrm)
 
 target_sources(
@@ -27,6 +27,24 @@ target_compile_definitions(
     $<$<PLATFORM_ID:Windows>:TSRM_EXPORTS>
 )
 
+# Add PUBLIC/INTERFACE compile flags to configuration. Cleaner COMPILE_ONLY
+# generator expression is available in CMake >= 3.27.
+#[[if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.27)
+  target_link_libraries(php_configuration INTERFACE $<COMPILE_ONLY:PHP::TSRM>)
+else()
+  target_include_directories(
+    php_configuration
+    INTERFACE
+      $<TARGET_PROPERTY:PHP::TSRM,INTERFACE_INCLUDE_DIRECTORIES>
+  )
+  target_compile_definitions(
+    php_configuration
+    INTERFACE
+      $<TARGET_PROPERTY:PHP::TSRM,INTERFACE_COMPILE_DEFINITIONS>
+  )
+endif()
+]]
+
 # Check POSIX Threads.
 function(_php_tsrm_thread_safety)
   message(CHECK_START "Checking whether to enable thread safety")
diff --git a/cmake/Zend/CMakeLists.txt b/cmake/Zend/CMakeLists.txt
index 54db292..717014d 100644
--- a/cmake/Zend/CMakeLists.txt
+++ b/cmake/Zend/CMakeLists.txt
@@ -82,7 +82,7 @@ endif()
 # Add library.
 ################################################################################
 
-add_library(zend STATIC)
+add_library(zend OBJECT)
 add_library(Zend::Zend ALIAS zend)
 
 file(GLOB _zend_headers ${CMAKE_CURRENT_SOURCE_DIR}/*.h)
@@ -113,6 +113,7 @@ target_sources(
     Optimizer/zend_inference.c
     Optimizer/zend_optimizer.c
     Optimizer/zend_ssa.c
+    #$<$<NOT:$<IN_LIST:$<TARGET_PROPERTY:TYPE>,STATIC_LIBRARY>>:zend_alloc.c>
     zend_alloc.c
     zend_API.c
     zend_ast.c
@@ -211,8 +212,8 @@ target_compile_definitions(
     $<$<PLATFORM_ID:Windows>:LIBZEND_EXPORTS>
 )
 
-# Add Zend PUBLIC/INTERFACE compile options to configuration.
-# Cleaner COMPILE_ONLY generator expression is available in CMake >= 3.27.
+# Add PUBLIC/INTERFACE compile flags to configuration. Cleaner COMPILE_ONLY
+# generator expression is available in CMake >= 3.27.
 if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.27)
   target_link_libraries(php_configuration INTERFACE $<COMPILE_ONLY:Zend::Zend>)
 else()
diff --git a/cmake/cmake/CMakeDefaults.cmake b/cmake/cmake/CMakeDefaults.cmake
index baf845c..e3c7d38 100644
--- a/cmake/cmake/CMakeDefaults.cmake
+++ b/cmake/cmake/CMakeDefaults.cmake
@@ -58,3 +58,5 @@ option(
   OFF
 )
 mark_as_advanced(CMAKE_COMPILE_WARNING_AS_ERROR)
+
+set(CMAKE_OPTIMIZE_DEPENDENCIES ON)
diff --git a/cmake/main/CMakeLists.txt b/cmake/main/CMakeLists.txt
index a51dad3..d5d4948 100644
--- a/cmake/main/CMakeLists.txt
+++ b/cmake/main/CMakeLists.txt
@@ -12,8 +12,6 @@ target_sources(
     fastcgi.c
     fopen_wrappers.c
     getopt.c
-    internal_functions_cli.c
-    internal_functions.c
     main.c
     network.c
     output.c
@@ -58,6 +56,22 @@ target_sources(
         $<$<NOT:$<PLATFORM_ID:Windows>>:${CMAKE_CURRENT_BINARY_DIR}/php_config.h>
 )
 
+add_library(php_main_static OBJECT)
+add_library(php_main_static ALIAS PHP::main_static)
+target_sources(
+  php_main_static
+  PRIVATE
+    internal_functions.c
+)
+
+add_library(php_main_executables OBJECT)
+add_library(php_main_executables ALIAS PHP::main_executables)
+target_sources(
+  php_main_executables
+  PRIVATE
+    internal_functions_cli.c
+)
+
 target_compile_definitions(
   php_main
   PRIVATE
@@ -84,7 +98,7 @@ target_link_libraries(
   # Link publicly for PHP SAPIs.
   PUBLIC
     PHP::configuration
-    Zend::Zend
+    #Zend::Zend
 )
 
 if(TARGET PHP::win32)
@@ -155,8 +169,8 @@ endif()
 
 get_cmake_property(extensions PHP_EXTENSIONS)
 foreach(extension IN LISTS extensions)
-  # Add extension's PUBLIC/INTERFACE compile options to configuration.
-  # Cleaner COMPILE_ONLY generator expression is available in CMake >= 3.27.
+  # Add PUBLIC/INTERFACE compile flags to configuration. Cleaner COMPILE_ONLY
+  # generator expression is available in CMake >= 3.27.
   if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.27)
     target_link_libraries(php_configuration
       INTERFACE $<COMPILE_ONLY:PHP::${extension}>
@@ -167,6 +181,11 @@ foreach(extension IN LISTS extensions)
       INTERFACE
         $<TARGET_PROPERTY:PHP::${extension},INTERFACE_INCLUDE_DIRECTORIES>
     )
+    target_compile_definitions(
+      php_configuration
+      INTERFACE
+        $<TARGET_PROPERTY:PHP::${extension},INTERFACE_COMPILE_DEFINITIONS>
+    )
   endif()
 
   target_link_libraries(php_${extension} PRIVATE PHP::configuration)
diff --git a/cmake/sapi/cli/CMakeLists.txt b/cmake/sapi/cli/CMakeLists.txt
index ebb0237..6eea86a 100644
--- a/cmake/sapi/cli/CMakeLists.txt
+++ b/cmake/sapi/cli/CMakeLists.txt
@@ -74,6 +74,7 @@ target_link_libraries(
   php_cli
   PRIVATE
     PHP::main
+    Zend::Zend
     $<$<PLATFORM_ID:Windows>:ws2_32;shell32>
 )
 
diff --git a/cmake/sapi/embed/CMakeLists.txt b/cmake/sapi/embed/CMakeLists.txt
index d2f07bc..a0e5cf2 100644
--- a/cmake/sapi/embed/CMakeLists.txt
+++ b/cmake/sapi/embed/CMakeLists.txt
@@ -21,7 +21,15 @@ target_sources(
         php_embed.h
 )
 
-target_link_libraries(php_embed PRIVATE PHP::main)
+target_link_libraries(
+  php_embed
+  PRIVATE
+    PHP::libraries
+    #"$<LINK_LIBRARY:WHOLE_ARCHIVE,PHP::TSRM>"
+    #Zend::Zend
+    #PHP::TSRM
+    PHP::main
+)
 
 target_compile_definitions(php_embed PRIVATE ZEND_ENABLE_STATIC_TSRMLS_CACHE=1)
 
