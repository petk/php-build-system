#[=============================================================================[
Script for processing PHP stub sources.

Expected variables:

* PHP_COMMAND
#]=============================================================================]

cmake_minimum_required(VERSION 4.2...4.3)

if(NOT CMAKE_SCRIPT_MODE_FILE)
  message(FATAL_ERROR "This is a command-line script.")
endif()

if(NOT PHP_COMMAND)
  message(WARNING "StubsGenerator.cmake: No PHP command given.")
  return()
endif()

set(sources "@PHP_SOURCES@")
set(phpGenStubScriptSource "@PROJECT_SOURCE_DIR@/build/gen_stub.php")

# Ensure sources include only *.stub.php files.
list(FILTER sources INCLUDE REGEX [[\.stub\.php$]])

# Create a list of sources that must be parsed by the generator.
if(${phpGenStubScriptSource} IS_NEWER_THAN ${CMAKE_CURRENT_LIST_FILE})
  file(COPY ${phpGenStubScriptSource} DESTINATION ${CMAKE_CURRENT_LIST_DIR})
  set(stubs ${sources})
  file(TOUCH ${CMAKE_CURRENT_LIST_FILE})
else()
  foreach(stub ${sources})
    string(REGEX REPLACE [[\.stub\.php$]] [[_arginfo.h]] header "${stub}")
    if("${stub}" IS_NEWER_THAN "${header}")
      list(APPEND stubs ${stub})
    endif()
  endforeach()
endif()

if(NOT stubs)
  return()
endif()

execute_process(
  COMMAND
    ${CMAKE_COMMAND} -E cmake_echo_color --blue --bold
      "Regenerating *_arginfo.h headers from *.stub.php sources"
  COMMAND
    ${PHP_COMMAND} ${CMAKE_CURRENT_LIST_DIR}/gen_stub.php ${stubs}
)

# Ensure that *_arginfo.h headers are newer than their *.stub.php sources.
foreach(stub ${stubs})
  string(REGEX REPLACE [[\.stub\.php$]] [[_arginfo.h]] header "${stub}")
  if("${stub}" IS_NEWER_THAN "${header}")
    file(TOUCH "${header}")
  endif()
endforeach()
